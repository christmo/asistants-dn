# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
logging:
    level:
        ROOT: INFO
        ec.com.dinersclub.chatbot: INFO

spring:
    application:
        name: flowAlexaBackend
    profiles:
        active: qa
    jackson:
        serialization.write_dates_as_timestamps: false
    datasource:
        type: com.zaxxer.hikari.HikariDataSource
        url: jdbc:postgresql://devchatbotdb.cmh49aj35zu3.us-west-2.rds.amazonaws.com:5432/be_chatbot_flow_alexa
        username: dbuser
        password: WKVHEUBQZENBDYMQ
    jpa:
      database-platform: org.hibernate.dialect.PostgreSQL9Dialect
      database: POSTGRESQL
      show-sql: true
      properties:
              hibernate.id.new_generator_mappings: true
              hibernate.cache.use_second_level_cache: false
              hibernate.cache.use_query_cache: false
              hibernate.generate_statistics: true
              hibernate.ddl-auto: update
              hibernate.generate-ddl: true
              hibernate.temp:
                   use_jdbc_metadata_defaults: false
      generate-ddl: true
      hibernate:
        ddl-auto: update
    mail:
        host: smtp.gmail.com
        port: 587
        username: chatbotdiners@gmail.com
        password: Diners.2018
        properties:
              mail:
               smtp:
                 auth: true
                 starttls:
                    enable: true
                    required: true
               ssl:
                enable: true
    messages:
        basename: i18n/messages
    mvc:
        favicon:
            enabled: false
    thymeleaf:
        mode: XHTML
    batch:
      initialize-schema: always
      job:
        enabled: false

server:
  port: 8453
  ssl:
    key-store: /etc/ssl/certs/clientcert.p12
    key-store-password: Pentasec1200
    key-store-type: JKS
    enabled: true
  servlet:
    context-path: /alexa-demo
    
# ===================================================================
#  specific properties
# ===================================================================
jhipster:
  gateway:
    rate-limiting:
      enabled: false
      limit: 100000
      duration-in-seconds: 3600
    authorized-microservices-endpoints: # Access Control Policy, if left empty for a route, all endpoints will be accessible
      app1: /api,/v2/api-docs # recommended dev configuration
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 100 # Number of objects in each cache entry
  # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
  cors:
    allowed-origins: '*'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: ZWJhNTM5Y2NiYzZiMzgwNjZhZjE2MWEwMjcyYmQzNzAxN2U3MzIxN2M4NTk4OWRjNTg2OTdmMGFhNWRkYWRhYWRhZDcwZTJhODIyNDQ2ZTU4YzE4ODUyN2U4MTZjNTFhN2FiZDhlNjEwZjkxZTdmZDZkNGNhMzA4NDIyMzgxMDQ=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    from: ohsBackend@localhost
    base-url: http://ohs.inscoraqa.net/qafe
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
          
# =============================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# =============================================================================
application:
  time-zone: America/Guayaquil
  backend-url: https://chatqa.dce.ec:30000/chatbot-admin-backend/api/
  proxy-enabled: false
  proxy-address: 192.168.18.35
  proxy_port: 9090
  watson_workspace: 9189b6ed-98a5-4e6d-9384-9bb1f2cdbd5c
  watson_api_key: 1haWvOkWerAExgjuo8CM8erXtbw7vkT9swgpl7x4S7U2
  watson_version: 2018-06-06
  card-service-backend: http://45.65.203.4:8905/as/consultaTarjetas
  flow-type-id: 1700
  backend-user: user
  backend-password: user
  intent-backend-url: https://chatqa.dce.ec:30005/intent/api/
  mailer-backend-url: http://ec2-52-40-163-165.us-west-2.compute.amazonaws.com:30000/chatbot-admin-backend/api/
  big-url-front-end: https://b.dce.ec/c/
  aws-sqs-interactions-fifo-name: chatbot-interactions-dev.fifo
  flow-name: ALEXA
  otp-service-backend: http://10.100.181.149
  user-data-backend-url: http://10.100.181.149:7850/ventas/asistencia
  consulta-consolidado-backend-url: http://10.100.181.149:8887/as/consultaTarjetas
  user-s3: chatbot-system
  user-s3-key: AKIAYLFKNIISTRLKMDN2
  user-s3-password: xyg/vvXNBwWHnNNPlbqn1KtZg4mIze5C6v/VGett
  user-s3-bucket-name: chatbot-credito
  user-s3-bucket-key: alexa/promociones_diners.csv
  user-s3-bucket-region: sa-east-1